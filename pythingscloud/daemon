#!/bin/bash

# Check we are in the right place
if [ ! -d ./services ]; then
    echo "You must run this script from the project's root folder."
    exit 1
fi

# Support vars
JUSTSTARTED=true
RECURSIVE=$1

# Log that we started the daemon
echo "Starting daemon..."

# Run setup
pythingscloud/setup

# Start daemon
echo "Started daemon @ $(date)"

# Check if this is the first run or a recursive run
if [[ "x$RECURSIVE" == "xTrue" ]] ; then
    echo "Recursive run, not starting the services."
else
    echo "First run, starting the services..."

    # Check on which branch we are
    BRANCH=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD 2>&1)
    if [ ! $? -eq 0 ]; then
        echo $BRANCH
        echo "Error: could not obtain local branch at startup time. See output above."
        echo "Current time: $(date)"
    fi

    # Build "just in case", in particular for first run ever
    echo "Now building..."
    pythingscloud/build

    # If the above failed, try with no cache
	if [ ! $? -eq 0 ]; then
	    echo "Error in rebuilding services, now trying without cache..."
	    pythingscloud/build nocache
	    if [ ! $? -eq 0 ]; then
	        echo "Error: failed rebuilding services even without cache."
	        continue
	    fi
	fi

    # Clean before running
    pythingscloud/clean 

    # Run
    pythingscloud/run
    if [ ! $? -eq 0 ]; then
        echo "Error: pythingscloud run failed at startup time. See output above."
        echo "Current time: $(date)"
        echo "Current branch: $BRANCH"
        echo ""
        echo "I will now mark the forthcoming update process as \"unfinished\", which will"
        echo "trigger a new build and re-run as soon as the update check loop will start."
        touch .update_in_progress_flag
    fi
fi


# Start update loop
while true
do

    # Get date TODO: directly use $(date) in the code
    DATE=$(date)

    # Sleep before next iteration (if not just started)
    if [ "$JUSTSTARTED" = true ]; then

        JUSTSTARTED=false

        # Log that we started the update loop
        echo ""
        echo "Started update check loop @ $DATE"

    else
        sleep 60
    fi

    # Check on which branch we are
    BRANCH=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD 2>&1)
    if [ ! $? -eq 0 ]; then
        echo $BRANCH
        echo "Error: could not obtain local branch. See output above."
        echo "Current time: $DATE"
        continue
    fi

    # Update from remote
    GIT_REMOTE=$(git remote -v update 2>&1)

    if [ ! $? -eq 0 ]; then
        echo $GIT_REMOTE
        echo "Error: could not check remote status. See output above."
        echo "Current time: $DATE"
        echo "Current branch: $BRANCH"
        continue
    fi

    # Check log diff within local and origin (remote)
    GIT_LOG=$(git log $BRANCH..origin/$BRANCH --oneline)

    # If an update was started and not completed, just force it
    if [ -f .update_in_progress_flag ]; then
        GIT_LOG="FORCED"
        echo "Detected unfinished update process, resuming it..."
    fi


    if [[ "x$GIT_LOG" == "x" ]] ; then

        # Remote has not changed. Do nothing
        :

    else

        # Remote has changed. Start update process
        echo "Remote changes detected"
        echo "Current time: $DATE"
        echo "Current branch: $BRANCH"
        echo "Starting the update process..."

        # Set update in progress flag
        touch .update_in_progress_flag

        # Pull changes from origin (remote)
        GIT_PULL=$(git pull 2>&1)

        # If pull failed abort
        if [ ! $? -eq 0 ]; then
            echo $GIT_PULL
            echo "Error: pull failed. See output above."
            continue
        fi

        # Run the setup
	    echo "Running setup"    
	    pythingscloud/setup

        # Re-build
        echo "Now building..."
        pythingscloud/build

        # If the above failed, try with no cache
        if [ ! $? -eq 0 ]; then
            echo "Error in rebuilding services, now trying without cache..."
            pythingscloud/build nocache
            if [ ! $? -eq 0 ]; then
                echo "Error: failed rebuilding services even without cache."
                continue
            fi
        fi

        # All good if we are here. Clean and restart everything
        pythingscloud/clean
        pythingscloud/run
        if [ ! $? -eq 0 ]; then
            echo "Error: pythingscloud run failed. See output above."
            continue
        fi

        # Remove update in progress flag
        rm .update_in_progress_flag

        # Load new daemon
        echo "Now loading new daemon..."
        export RECURSIVE=True
        exec pythingscloud/daemon
    fi

done
