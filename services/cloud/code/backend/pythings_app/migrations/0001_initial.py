# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2020-08-30 13:55
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aid', models.CharField(max_length=36, verbose_name='App ID')),
                ('name', models.CharField(max_length=36, verbose_name='Pythings Version')),
                ('hidden', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Commit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.CharField(default=None, max_length=36, verbose_name='Commit id')),
                ('ts', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Creation timestamp')),
                ('tag', models.CharField(blank=True, max_length=36, null=True, verbose_name='Tag')),
                ('valid', models.BooleanField(default=False)),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pythings_app.App')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=36, verbose_name='File name')),
                ('path', models.CharField(default='/', max_length=256, verbose_name='File path')),
                ('content', models.TextField(default='', verbose_name='File contents')),
                ('ts', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Creation timestamp')),
                ('committed', models.BooleanField(default=False)),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pythings_app.App')),
            ],
        ),
        migrations.CreateModel(
            name='ManagementMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aid', models.CharField(max_length=36, verbose_name='App ID')),
                ('tid', models.CharField(max_length=36, verbose_name='Thing ID')),
                ('ts', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Message timestamp')),
                ('uuid', models.CharField(max_length=36, verbose_name='Message uuid')),
                ('status', models.CharField(default='Queued', max_length=36, verbose_name='Message status')),
                ('type', models.CharField(default='APP', max_length=36, verbose_name='Message status')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('reply', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MessageCounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.IntegerField(default=0, verbose_name='total')),
                ('worker', models.IntegerField(default=0, verbose_name='worker')),
                ('management', models.IntegerField(default=0, verbose_name='management')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=36, null=True, verbose_name='Pythings Version')),
                ('use_latest_pythings_version', models.BooleanField(default=False)),
                ('use_latest_app_version', models.BooleanField(default=False)),
                ('development', models.BooleanField(default=False)),
                ('staging', models.BooleanField(default=False)),
                ('production', models.BooleanField(default=False)),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pythings_app.App')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timezone', models.CharField(default='UTC', max_length=36, verbose_name='User Timezone')),
                ('apikey', models.CharField(blank=True, max_length=36, null=True, verbose_name='User API key')),
                ('plan', models.CharField(default='Betatester', max_length=36, verbose_name='User plan')),
                ('plan_messages_limit', models.IntegerField(default=1000000, verbose_name='plan_messages_limit')),
                ('plan_things_limit', models.IntegerField(default=10, verbose_name='plan_things_limit')),
                ('type', models.CharField(default='Standard', max_length=36, verbose_name='Profile type')),
                ('type_id', models.IntegerField(default=10, verbose_name='Profile Type ID')),
                ('email_updates', models.BooleanField(default=False)),
                ('last_accepted_terms', models.FloatField(default=0, verbose_name='Last accepted TOS')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('token', models.CharField(max_length=36, primary_key=True, serialize=False, verbose_name='Session Token')),
                ('started', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Session start timestamp')),
                ('active', models.BooleanField(default=True)),
                ('pythings_version', models.CharField(blank=True, max_length=36, null=True, verbose_name='Pythings OS version')),
                ('app_version', models.CharField(blank=True, max_length=36, null=True, verbose_name='Session Token')),
                ('last_contact', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Session last contact timestamp')),
                ('last_pythings_status', models.TextField(default='Ok: session started', verbose_name='Last reported Pythings status')),
                ('last_worker_status', models.TextField(default='Unknown', verbose_name='Last reported worker status')),
                ('last_management_status', models.TextField(default='Unknown', verbose_name='Last reported management status')),
                ('key', models.CharField(blank=True, max_length=512, null=True, verbose_name='Key')),
                ('kty', models.CharField(blank=True, max_length=36, null=True, verbose_name='Key type')),
                ('pool', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pythings_app.Pool')),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pythings_version', models.CharField(max_length=36, verbose_name='Pythings Version')),
                ('backend', models.CharField(blank=True, max_length=36, null=True, verbose_name='Backend')),
                ('app_version', models.CharField(max_length=36, verbose_name='App version')),
                ('app_tag', models.CharField(blank=True, max_length=36, null=True, verbose_name='App tag')),
                ('management_interval', models.CharField(max_length=36, verbose_name='Management interval')),
                ('worker_interval', models.CharField(max_length=36, verbose_name='Worker interval')),
                ('ssl', models.BooleanField(default=True, verbose_name='Use SSL')),
                ('payload_encryption', models.BooleanField(default=False, verbose_name='Use Payload encryption')),
                ('battery_operated', models.BooleanField(default=False, verbose_name='Battery operated')),
                ('setup_timeout', models.IntegerField(default=60, verbose_name='Setup timeout')),
                ('edited', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Edited timestamp')),
            ],
        ),
        migrations.CreateModel(
            name='Thing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tid', models.CharField(max_length=36, verbose_name='Thing ID')),
                ('name', models.CharField(blank=True, max_length=36, null=True, verbose_name='Name')),
                ('use_custom_settings', models.BooleanField(default=False)),
                ('frozen_os', models.BooleanField(default=False)),
                ('platform', models.CharField(blank=True, max_length=36, null=True, verbose_name='Platform')),
                ('capabilities', models.CharField(blank=True, max_length=36, null=True, verbose_name='Capabilities')),
                ('app_set_via', models.CharField(blank=True, max_length=36, null=True, verbose_name='App set via')),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pythings_app.App')),
                ('pool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pythings_app.Pool')),
                ('settings', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pythings_app.Settings')),
            ],
        ),
        migrations.CreateModel(
            name='WorkerMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aid', models.CharField(max_length=36, verbose_name='App ID')),
                ('tid', models.CharField(max_length=36, verbose_name='Thing ID')),
                ('ts', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Message timestamp')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='workermessage',
            unique_together=set([('aid', 'tid', 'ts')]),
        ),
        migrations.AddField(
            model_name='session',
            name='thing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pythings_app.Thing'),
        ),
        migrations.AddField(
            model_name='pool',
            name='settings',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pythings_app.Settings'),
        ),
        migrations.AddField(
            model_name='managementmessage',
            name='thing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pythings_app.Thing'),
        ),
        migrations.AddField(
            model_name='commit',
            name='files',
            field=models.ManyToManyField(to='pythings_app.File'),
        ),
        migrations.AddField(
            model_name='app',
            name='default_pool',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pythings_app.Pool'),
        ),
        migrations.AddField(
            model_name='app',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='managementmessage',
            unique_together=set([('tid', 'uuid')]),
        ),
    ]
